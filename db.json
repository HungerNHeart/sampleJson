{"questionData":[{"id":15344,"title":"Which of the following type of class allows only one object of it t","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"Virtual class"},{"key":"option_2","value":"Abstract class"},{"key":"option_3","value":"Singleton class"},{"key":"option_4","value":"          Friend class"}]},{"id":15342,"title":"How many objects can be created from an abstract class?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"Zero"},{"key":"option_2","value":"One"},{"key":"option_3","value":"Two"},{"key":"option_4","value":"As many as we want"}]},{"id":15352,"title":"Which is boolean operator for logical and","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" &"},{"key":"option_2","value":" ||"},{"key":"option_3","value":"&|"},{"key":"option_4","value":" &&"}]},{"id":15300,"title":"What is purpose of abstract class?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"to provide help with database connectivity"},{"key":"option_2","value":" to provide data input to other classes"},{"key":"option_3","value":"to provide security to other classes"},{"key":"option_4","value":"to provide an appropriate base class from which other classes can inherit"}]},{"id":15345,"title":"Which is not C++ storage class","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" auto"},{"key":"option_2","value":"register"},{"key":"option_3","value":"static"},{"key":"option_4","value":" iostream"}]},{"id":15347,"title":"Meaning of STL","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" Standard Tree Library"},{"key":"option_2","value":"Standard Term Library"},{"key":"option_3","value":"Standard Template Library"},{"key":"option_4","value":" None of above"}]},{"id":15288,"title":"Which one of the following is the correct way to declare a pure virtual function?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"virtual void Display(void){0};"},{"key":"option_2","value":"virtual void Display = 0;"},{"key":"option_3","value":"virtual void Display(void) = 0;"},{"key":"option_4","value":"void Display(void) = 0;"}]},{"id":15361,"title":"Declaring pointer more than one can cause","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" Trap"},{"key":"option_2","value":" abort a program"},{"key":"option_3","value":" error"},{"key":"option_4","value":" none of above"}]},{"id":15299,"title":"What is object in C++ ?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"Object is part of syntax of a class"},{"key":"option_2","value":" Object is datatype of a class"},{"key":"option_3","value":"Object is an instance of a class"},{"key":"option_4","value":"Object is function of a class"}]},{"id":15301,"title":"Classes that can be used to instantiate objects are called concrete","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"True"},{"key":"option_2","value":" False"},{"key":"option_3","value":"null"},{"key":"option_4","value":"null"}]},{"id":15365,"title":"What is the meaning of base class in C++","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" Another class got inherit from this class"},{"key":"option_2","value":" It inherit other class"},{"key":"option_3","value":"It has a pointer variable"},{"key":"option_4","value":" It is the first class declared"}]},{"id":15292,"title":"Which of the following is correct about function overriding?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"The types of arguments are same"},{"key":"option_2","value":"The order of argument is same"},{"key":"option_3","value":"The number of argument is same"},{"key":"option_4","value":"All of the above"}]},{"id":15360,"title":"What is abstract class","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" Whose objects cant be created"},{"key":"option_2","value":" Whose objects can be created"},{"key":"option_3","value":" Depends on class"},{"key":"option_4","value":" None of above"}]},{"id":15307,"title":"Which of the following keywords are used to control access to a cla","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"protected"},{"key":"option_2","value":" switch"},{"key":"option_3","value":"goto"},{"key":"option_4","value":"for"}]},{"id":15371,"title":"Which type of variables can be referred from anywhere in the c++ co","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" All variables"},{"key":"option_2","value":" Local variables"},{"key":"option_3","value":"Universal variables"},{"key":"option_4","value":" Global variables"}]},{"id":15353,"title":"Meaning of PDB","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" Physical Database File"},{"key":"option_2","value":"Program Database File"},{"key":"option_3","value":"Program Direct File"},{"key":"option_4","value":" None of above"}]},{"id":15319,"title":"An explicitly defined destructor function","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"may be virtual"},{"key":"option_2","value":" may not be virtual"},{"key":"option_3","value":"will always be virtual"},{"key":"option_4","value":" will never be virtual"}]},{"id":15330,"title":"What is meant by ofstream in c++?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"Writes to a file "},{"key":"option_2","value":"Reads from a file "},{"key":"option_3","value":"Both a & b "},{"key":"option_4","value":" None of the mentioned "}]},{"id":15304,"title":"How we can define member function outside the class ?","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":"Using union"},{"key":"option_2","value":" Using structure"},{"key":"option_3","value":"Using pointers"},{"key":"option_4","value":"Using scope resolution"}]},{"id":15366,"title":"How we define our name for constants","numoptions":4,"qtype":"mcq","options":[{"key":"option_1","value":" #constant"},{"key":"option_2","value":" #define"},{"key":"option_3","value":"#define_constant"},{"key":"option_4","value":" #constant_define"}]}]}